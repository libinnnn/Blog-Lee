<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lee.dao.BlogDao">

    <resultMap id="User" type="com.lee.pojo.User">
        <id property="id" column="id"/>
        <result property="nickname" column="nickname"/>
        <result property="username" column="username"/>
        <result property="email" column="email"/>
        <result property="avatar" column="avatar"/>
    </resultMap>

    <resultMap id="blog" type="com.lee.dto.BlogQuery">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="updateTime" column="update_time"/>
        <result property="recommend" column="recommend"/>
        <result property="typeId" column="type_id"/>
        <association property="type" javaType="com.lee.pojo.Type">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
        </association>
    </resultMap>
    <select id="getAllBlogQuery" resultMap="blog">
        select b.id,b.title,b.update_time,b.recommend,b.type_id,t.id,t.name from blog.t_blog b left outer join
        blog.t_type t on b.type_id = t.id order by b.update_time desc
    </select>

    <delete id="deleteBlog">
        delete from blog.t_blog where id = #{id}
    </delete>

    <delete id="deleteBlogAndTag" >
        delete from blog.t_blog_tags where blog_id = #{blogId}
    </delete>

    <insert id="saveBlog" parameterType="com.lee.pojo.Blog">
        insert into blog.t_blog (id,title, content, first_picture, flag,
        views, appreciation, share_statement, commentabled,published,
        recommend, create_time, update_time, type_id,tag_ids, user_id, description)
        values (#{id},#{title},#{content},#{firstPicture},#{flag},#{views},#{appreciation},
        #{shareStatement},#{commentabled},#{published},#{recommend},#{createTime},
        #{updateTime},#{typeId},#{tagIds},#{userId},#{description});
    </insert>

    <insert id="saveBlogAndTag" parameterType="com.lee.dto.BlogAndTag">
        insert into blog.t_blog_tags (tag_id, blog_id) values (#{tagId},#{blogId});
    </insert>

    <select id="searchByTitleOrTypeOrRecommend" parameterType="com.lee.dto.SearchBlog" resultMap="blog">
        <bind name="pattern" value="'%' + title + '%'" />
        select b.id,b.title,b.update_time,b.recommend,b.type_id,t.id,t.name from blog.t_blog b ,blog.t_type t
        <where>
            <if test="1 == 1">
                b.type_id = t.id
            </if>
            <if test="typeId != null">
                and b.type_id = #{typeId}
            </if>
            <if test="recommend2 != null">
                and b.recommend = #{recommend2}
            </if>
            <if test="title != null">
                and b.title like #{pattern}
            </if>
        </where>
    </select>


    <select id="getBlogById" resultType="com.lee.dto.ShowBlog" >
        select b.id,b.published,b.flag,b.title,b.content,b.type_id,
         b.tag_ids,b.first_picture,b.description,b.recommend,b.share_statement,
         b.appreciation,b.commentabled from blog.t_blog b  where  b.id = #{id};
    </select>

    <update id="updateBlog" parameterType="com.lee.dto.ShowBlog">
        update blog.t_blog set published = #{published},flag = #{flag} ,
        title = #{title}, content = #{content}, type_id = #{typeId}, tag_ids = #{tagIds},
        first_picture = #{firstPicture} , description = #{description} , recommend = #{recommend} ,
        share_statement = #{shareStatement}, appreciation = #{appreciation},
        commentabled = #{commentabled} ,update_time = #{updateTime} where id = #{id};
    </update>
    

    <resultMap id="firstPageBlog" type="com.lee.dto.FirstPageBlog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="views" column="views"/>
        <result property="updateTime" column="update_time"/>
        <result property="description" column="description"/>

        <result property="typeName" column="name"/>

        <result property="nickname" column="nickname"/>
        <result property="avatar" column="avatar"/>
    </resultMap>

    <select id="getFirstPageBlog" resultMap="firstPageBlog">
        select b.id,b.title,b.first_picture, b.views,b.update_time,b.description,
        t.name ,
        u.nickname, u.avatar
        from blog.t_blog b, blog.t_type t,blog.t_user u
        where b.type_id = t.id and  u.id = b.user_id order by b.update_time desc
    </select>

    <select id="getAllRecommendBlog" resultType="com.lee.dto.RecommendBlog">
        select id,title,recommend from blog.t_blog;
    </select>


    <select id="getSearchBlog" resultMap="firstPageBlog">
        <bind name="pattern" value="'%' + query + '%'" />
        select b.id,b.title,b.first_picture, b.views,b.update_time,b.description,
        t.name ,
        u.nickname, u.avatar
        from blog.t_blog b, blog.t_type t,blog.t_user u
        where b.type_id = t.id and  u.id = b.user_id and (b.title like #{pattern} or b.content like  #{pattern})
        order by b.update_time desc
    </select>

    <resultMap id="detailedBlog" type="com.lee.dto.DetailedBlog">
        <id property="id" column="bid"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="flag" column="flag"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="views" column="views"/>
        <result property="updateTime" column="update_time"/>
        <result property="commentabled" column="commentabled"/>
        <result property="shareStatement" column="share_statement"/>
        <result property="appreciation" column="appreciation"/>
        <result property="nickname" column="nickname"/>
        <result property="avatar" column="avatar"/>
        <collection property="tags" ofType="com.lee.pojo.Tag">
            <id property="id" column="tid"/>
            <result property="name" column="name"/>
        </collection>
    </resultMap>

    <select id="getDetailedBlog" resultMap="detailedBlog">
        select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,
        t.id tid ,t.name
        from blog.t_blog b,blog.t_user u,blog.t_tag t,blog.t_blog_tags tb
        where b.user_id = u.id and tb.blog_id = b.id and tb.tag_id = t.id and  b.id = #{id}
    </select>

    <select id="getByTypeId" resultMap="firstPageBlog">
        select b.id,b.title,b.first_picture, b.views,b.update_time,b.description,
        t.name ,
        u.nickname, u.avatar
        from blog.t_blog b, blog.t_type t,blog.t_user u
        where b.type_id = t.id and u.id = b.user_id and b.type_id = #{typeId} order by b.update_time desc
    </select>

    <select id="getByTagId" resultType="com.lee.dto.FirstPageBlog">
        select b.id,b.title,b.first_picture,b.views,b.update_time,b.description,
        t.name,
        u.nickname,u.avatar
        from blog.t_blog b,blog.t_type t,blog.t_user u ,blog.t_blog_tags tb,blog.t_tag t1
        where b.type_id = t.id and u.id = b.user_id and tb.blog_id = b.id and tb.tag_id = t1.id and t1.id = #{tagId}
        order by b.update_time desc
    </select>

</mapper>